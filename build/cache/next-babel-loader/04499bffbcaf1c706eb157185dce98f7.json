{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dohome/dohome/tail-kit/components/site/DropDown/DropD.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Link from 'next/link';\n\nvar DropD = function DropD(props) {\n  _s();\n\n  var _useState = useState(false),\n      isSectionOpen = _useState[0],\n      setIsSectionOpen = _useState[1];\n\n  var listElement = useRef();\n  var selectButton = useRef();\n  var handleClickOutside = useCallback(function (event) {\n    var myHTMLWrapper = listElement.current;\n    var btnElement = selectButton.current;\n\n    if (myHTMLWrapper && btnElement && !myHTMLWrapper.contains(event.target) && !btnElement.contains(event.target)) {\n      setIsSectionOpen(false);\n    }\n  }, []);\n  useEffect(function () {\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: selectButton,\n      type: \"button\",\n      onClick: function onClick() {\n        return setIsSectionOpen(!isSectionOpen);\n      },\n      className: \"group rounded-md text-gray-800 dark:text-white inline-flex items-center text-base font-light hover:text-black dark:hover:text-gray-50 text-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"ml-2 h-5 w-5 text-gray-500 dark:text-gray-100 hover:text-gray-500 dark:hover:text-white\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentColor\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\",\n          clipRule: \"evenodd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), isSectionOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: listElement,\n      className: \"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8 divide-y divide-gray-300\",\n          children: props.links.map(function (entry) {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: entry.link,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"-m-3 py-2 flex items-center hover:text-indigo-600  text-gray-900\",\n                children: [entry.icon, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-normal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-lg\",\n                    children: entry.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs mt-0 text-gray-400\",\n                    children: entry.desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 49\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 45\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, _this)\n            }, entry.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DropD, \"XE5E8RQYQgKSKCevcsiqB/VhwkA=\");\n\n_c = DropD;\nexport default DropD;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropD\");","map":{"version":3,"sources":["/Users/dohome/dohome/tail-kit/components/site/DropDown/DropD.tsx"],"names":["React","useCallback","useEffect","useRef","useState","Link","DropD","props","isSectionOpen","setIsSectionOpen","listElement","selectButton","handleClickOutside","event","myHTMLWrapper","current","btnElement","contains","target","document","addEventListener","removeEventListener","label","links","map","entry","link","icon","desc"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Link from 'next/link';\n\ninterface Props {\n    links: HeaderLink[];\n    label: string;\n}\ninterface HeaderLink {\n    label: string;\n    link?: string;\n    isSelected?: boolean;\n    desc?: string;\n    icon?: JSX.Element;\n}\n\nconst DropD = (props: Props) => {\n    const [isSectionOpen, setIsSectionOpen] = useState(false);\n    const listElement = useRef<HTMLDivElement>();\n    const selectButton = useRef<HTMLButtonElement>();\n    const handleClickOutside = useCallback((event) => {\n        const myHTMLWrapper = listElement.current;\n        const btnElement = selectButton.current;\n        if (\n            myHTMLWrapper &&\n            btnElement &&\n            !myHTMLWrapper.contains(event.target) &&\n            !btnElement.contains(event.target)\n        ) {\n            setIsSectionOpen(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [handleClickOutside]);\n\n    return (\n        <div className=\"relative\">\n            <button\n                ref={selectButton}\n                type=\"button\"\n                onClick={() => setIsSectionOpen(!isSectionOpen)}\n                className=\"group rounded-md text-gray-800 dark:text-white inline-flex items-center text-base font-light hover:text-black dark:hover:text-gray-50 text-xl\"\n            >\n                <span>{props.label}</span>\n\n                <svg\n                    className=\"ml-2 h-5 w-5 text-gray-500 dark:text-gray-100 hover:text-gray-500 dark:hover:text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    aria-hidden=\"true\"\n                >\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                        clipRule=\"evenodd\"\n                    />\n                </svg>\n            </button>\n            {isSectionOpen && (\n                <div ref={listElement} className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0\">\n                    <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8 divide-y divide-gray-300\">\n                            {props.links.map((entry) => {\n                                return (\n                                    <Link href={entry.link} key={entry.label}>\n                                        <a className=\"-m-3 py-2 flex items-center hover:text-indigo-600  text-gray-900\">\n                                            {entry.icon}\n\n                                            <div className=\"font-normal\">\n                                                <p className=\"text-lg\">{entry.label}</p>\n                                                <p className=\"text-xs mt-0 text-gray-400\">{entry.desc}</p>\n                                            </div>\n                                        </a>\n                                    </Link>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default DropD;\n"]},"metadata":{},"sourceType":"module"}