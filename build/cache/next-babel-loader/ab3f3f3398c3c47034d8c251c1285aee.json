{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dohome/dohome/tail-kit/components/kit/components/form/toggle/Toggle.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport _uniqueId from 'lodash/uniqueId';\n\nvar Toggle = function Toggle(props) {\n  _s();\n\n  var _useState = useState(_uniqueId('prefix-')),\n      id = _useState[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"toggle\",\n        id: id,\n        checked: props.check,\n        onChange: function onChange(e) {\n          return props.onChange(e.target.checked);\n        },\n        className: \"right-4 checked:right-0 duration-200 ease-in checked:bg-blue-600 absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: \"block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, _this), props.label && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-gray-400 font-medium\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Toggle, \"rrE528aeelesYiOJSSBEgr/5OMg=\");\n\n_c = Toggle;\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["/Users/dohome/dohome/tail-kit/components/kit/components/form/toggle/Toggle.tsx"],"names":["React","useState","_uniqueId","Toggle","props","id","check","e","onChange","target","checked","label"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAkB;AAAA;;AAAA,kBAChBH,QAAQ,CAACC,SAAS,CAAC,SAAD,CAAV,CADQ;AAAA,MACtBG,EADsB;;AAE7B,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,0FAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,EAAE,EAAEA,EAHR;AAII,QAAA,OAAO,EAAED,KAAK,CAACE,KAJnB;AAKI,QAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,iBAAOH,KAAK,CAACI,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASC,OAAxB,CAAP;AAAA,SALd;AAMI,QAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,eADJ,eASI;AAAO,QAAA,OAAO,EAAEL,EAAhB;AAAoB,QAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,eATJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAYKD,KAAK,CAACO,KAAN,iBAAe;AAAM,MAAA,SAAS,EAAC,2BAAhB;AAAA,gBAA6CP,KAAK,CAACO;AAAnD;AAAA;AAAA;AAAA;AAAA,aAZpB;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CAlBD;;GAAMR,M;;KAAAA,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport _uniqueId from 'lodash/uniqueId';\n\ninterface Props {\n    onChange: (checked) => void;\n    check?: boolean;\n    label?: string;\n}\n\nconst Toggle = (props: Props) => {\n    const [id] = useState(_uniqueId('prefix-'));\n    return (\n        <div>\n            <div className=\"relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in\">\n                <input\n                    type=\"checkbox\"\n                    name=\"toggle\"\n                    id={id}\n                    checked={props.check}\n                    onChange={(e) => props.onChange(e.target.checked)}\n                    className=\"right-4 checked:right-0 duration-200 ease-in checked:bg-blue-600 absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer\"\n                />\n                <label htmlFor={id} className=\"block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer\" />\n            </div>\n            {props.label && <span className=\"text-gray-400 font-medium\">{props.label}</span>}\n        </div>\n    );\n};\nexport default Toggle;\n"]},"metadata":{},"sourceType":"module"}