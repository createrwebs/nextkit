{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dohome/dohome/tail-kit/components/kit/components/elements/ddm/LargeDropDownMenu.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\n\nvar LargeDropDownMenu = function LargeDropDownMenu(props) {\n  _s();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var listElement = useRef();\n  var selectButton = useRef();\n  var handleClickOutside = useCallback(function (event) {\n    var myHTMLWrapper = listElement.current;\n    var btnElement = selectButton.current;\n\n    if (myHTMLWrapper && btnElement && !myHTMLWrapper.contains(event.target) && !btnElement.contains(event.target)) {\n      setIsOpen(false);\n    }\n  }, []);\n  useEffect(function () {\n    document.addEventListener('mousedown', handleClickOutside);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: selectButton,\n        type: \"button\",\n        onClick: function onClick() {\n          return setIsOpen(!isOpen);\n        },\n        className: \" \".concat(props.withBackground ? 'border border-gray-300 bg-white dark:bg-gray-800 shadow-sm' : '', \" flex items-center justify-center w-full rounded-md  px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-50 hover:bg-gray-50 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-500\"),\n        id: \"options-menu\",\n        children: [props.label, props.icon || /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"20\",\n          height: \"20\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 1792 1792\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M1408 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), (props.forceOpen || isOpen) && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: listElement,\n      className: \"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative grid gap-6 bg-white dark:bg-gray-800 px-5 py-6 sm:gap-8 sm:p-8 divide-y divide-gray-100\",\n          children: props.items.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.link || '#',\n              className: \"-m-3 p-3 flex items-center hover:bg-gray-50\",\n              children: [item.icon, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-base font-medium text-gray-900 dark:text-white\",\n                  children: item.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, _this), item.desc && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-1 text-sm text-gray-500 dark:text-gray-400\",\n                  children: item.desc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 49\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, _this)]\n            }, item.label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LargeDropDownMenu, \"/qz/ssC1yTuHWLqYpFWnWkg7gM4=\");\n\n_c = LargeDropDownMenu;\nexport default LargeDropDownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LargeDropDownMenu\");","map":{"version":3,"sources":["/Users/dohome/dohome/tail-kit/components/kit/components/elements/ddm/LargeDropDownMenu.tsx"],"names":["React","useState","useRef","useCallback","useEffect","LargeDropDownMenu","props","isOpen","setIsOpen","listElement","selectButton","handleClickOutside","event","myHTMLWrapper","current","btnElement","contains","target","document","addEventListener","removeEventListener","withBackground","label","icon","forceOpen","items","map","item","link","desc"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\n\ninterface Props {\n    forceOpen?: boolean;\n    label?: string;\n    icon?: string;\n    items: DDMItem[];\n    withBackground?: boolean;\n}\ninterface DDMItem {\n    icon?: JSX.Element;\n    label: string;\n    desc?: string;\n    link?: string;\n}\nconst LargeDropDownMenu = (props: Props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const listElement = useRef<HTMLDivElement>();\n    const selectButton = useRef<HTMLButtonElement>();\n    const handleClickOutside = useCallback((event) => {\n        const myHTMLWrapper = listElement.current;\n        const btnElement = selectButton.current;\n        if (\n            myHTMLWrapper &&\n            btnElement &&\n            !myHTMLWrapper.contains(event.target) &&\n            !btnElement.contains(event.target)\n        ) {\n            setIsOpen(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [handleClickOutside]);\n    return (\n        <div className=\"relative inline-block text-left\">\n            <div>\n                <button\n                    ref={selectButton}\n                    type=\"button\"\n                    onClick={() => setIsOpen(!isOpen)}\n                    className={` ${\n                        props.withBackground ? 'border border-gray-300 bg-white dark:bg-gray-800 shadow-sm' : ''\n                    } flex items-center justify-center w-full rounded-md  px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-50 hover:bg-gray-50 dark:hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-gray-500`}\n                    id=\"options-menu\"\n                >\n                    {props.label}\n\n                    {props.icon || (\n                        <svg\n                            width=\"20\"\n                            height=\"20\"\n                            fill=\"currentColor\"\n                            viewBox=\"0 0 1792 1792\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path d=\"M1408 704q0 26-19 45l-448 448q-19 19-45 19t-45-19l-448-448q-19-19-19-45t19-45 45-19h896q26 0 45 19t19 45z\" />\n                        </svg>\n                    )}\n                </button>\n            </div>\n\n            {(props.forceOpen || isOpen) && (\n                <div\n                    ref={listElement}\n                    className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\"\n                >\n                    <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white dark:bg-gray-800 px-5 py-6 sm:gap-8 sm:p-8 divide-y divide-gray-100\">\n                            {props.items.map((item) => {\n                                return (\n                                    <a\n                                        href={item.link || '#'}\n                                        key={item.label}\n                                        className=\"-m-3 p-3 flex items-center hover:bg-gray-50\"\n                                    >\n                                        {item.icon}\n\n                                        <div className=\"ml-4\">\n                                            <p className=\"text-base font-medium text-gray-900 dark:text-white\">\n                                                {item.label}\n                                            </p>\n                                            {item.desc && (\n                                                <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                                                    {item.desc}\n                                                </p>\n                                            )}\n                                        </div>\n                                    </a>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default LargeDropDownMenu;\n"]},"metadata":{},"sourceType":"module"}